
string found was: 
                                Start here for a quick overview of the site


string found was: 
                                    Discuss the workings and policies of this site


string found was: 
                                    Learn more about Stack Overflow the company


string found was: 
            <b>Join the Stack Overflow Community</b>


string found was: 
                <span class="comment-copy">Have you tried using the contains-word() method in the NLTK package? <a href="http://nltk.org/api/nltk.classify.html" rel="nofollow noreferrer">nltk.org/api/nltk.classify.html</a></span>


string found was: 
        <a href="/questions/3437059/does-python-have-a-string-contains-substring-method?answertab=active#tab-top" data-nav-xhref="" title="Answers with the latest activity first" data-value="active" data-shortcut="A">


string found was: 
        <a href="/questions/3437059/does-python-have-a-string-contains-substring-method?answertab=oldest#tab-top" data-nav-xhref="" title="Answers in the order they were provided" data-value="oldest" data-shortcut="O">


string found was: 
        <a class="youarehere" href="/questions/3437059/does-python-have-a-string-contains-substring-method?answertab=votes#tab-top" data-nav-xhref="" title="Answers with the highest score first" data-value="votes" data-shortcut="V">


string found was: 
<p>You can use the <a href="https://docs.python.org/reference/expressions.html#membership-test-details" rel="nofollow noreferrer"><code>in</code> operator</a>:</p>


string found was: 
                <span class="comment-copy">@Casey, Michael, Alex, It doesn&#39;t work in Python3.1 if you are mixing <code>byte</code> and <code>str</code> types. Perhaps that is the problem</span>


string found was: 
                <span class="comment-copy">@Casey: If you were searching for <code>r&quot;\n&quot; in somestring</code>, then you weren&#39;t searching for newlines, you were searching for a literal backslash followed by the letter <code>n</code>; <code>r&quot;\n&quot;</code> prevents interpretation of backslash escapes (aside from the quote character), so the search wasn&#39;t for a newline at all.</span>


string found was: 
                <span class="comment-copy">@GershomMaes those two are equivalent:  it&#39;s the same as saying <code>not (blah in &#39;string&#39;)</code>, but stylistically I think it&#39;s nicer to use <code>not in</code>, more consistent with other operations where the intent is purely between the operands.  Note that <code>x != y</code> is NOT always the same as <code>! (x == y)</code>.  In python you can override the definition of &#39;equals&#39; by implementing <code>__eq__()</code>, and &#39;not equals&#39; with the separate function <code>__neq__()</code>.  Nothing forces them to be consistent.</span>


string found was: 
    print "Found 'is' in the string."


string found was: 
<p>Would print <code>Found 'is' in the string.</code> Similarly, <code>if "is" in s:</code> would evaluate to <code>True</code>. This may or may not be what you want.</p>


string found was: 
                <span class="comment-copy">+1 for highlighting the gotchas involved in substring searches. the obvious solution is <code>if &#39; is &#39; in s:</code> which will return <code>False</code> as is (probably) expected.</span>


string found was: 
                <span class="comment-copy">@aaronasterling Obvious it may be, but not entirely correct. What if you have punctuation or it&#39;s at the start or end? What about capitalisation? Better would be a case insensitive regex search for <code>\bis\b</code> (word boundaries).</span>


string found was: 
                <span class="comment-copy">Note: in the above comment <code>string.find</code> refers to the <code>find</code> function in the module <code>string</code>, while <code>mystring.find</code> refers to the <code>find</code> method of an instance of <code>str</code>.</span>


string found was: 
<p><code>if needle in haystack:</code> is the normal use, as @Michael says -- it relies on the <a href="https://docs.python.org/reference/expressions.html#membership-test-details" rel="nofollow noreferrer"><code>in</code></a> operator, more readable and faster than a method call.</p>


string found was: 
<p>If you truly need a method instead of an operator (e.g. to do some weird <code>key=</code> for a very peculiar sort...?), that would be <a href="https://docs.python.org/reference/datamodel.html#object.__contains__" rel="nofollow noreferrer"><code>'haystack'.__contains__</code></a>.  But since your example is for use in an <code>if</code>, I guess you don't really mean what you say;-).  It's not good form (nor readable, nor efficient) to use special methods directly -- they're meant to be used, instead, through the operators and builtins that delegate to them.</p>


string found was: 
                <span class="comment-copy">@smci: that is a misleading example. The methods and their principle <b>are</b> the same: both test if an &quot;item&quot; exists in the &quot;group&quot;. The <i>objects</i> are different. A list is not a string, and <code>&#39;cat&#39;</code> is clearly not an item of <code>[&#39;concat&#39;]</code>. Your <i>beware</i> draws attention for a non-existing point.</span>


string found was: 
You can use the python's <code>in</code> operator to check for a substring. Its quite simple and intuitive. 


string found was: 
It will return <code>True</code> if the substring was found in the string else <code>False</code>.</p>


string found was: 
Second method is to use the <code>str.find()</code> method. Here, we call the <code>.find()</code> method on the string in which substring is to found. We pass the substring to the find() method and check its return value. If its value is other than -1, substring was found in the string otherwise not. The value returned is the index where substring was found.</p>


string found was: 
<p>I would recommend you to use the first method as it is more pythonic and intuitive.</p>


string found was: 
<p>Yes, but Python has a comparison operator that you should use instead, because the language intends its usage, and other programmers will expect you to use it. That keyword is <code>in</code>, which is used as a comparison operator:</p>


string found was: 
<p>The opposite (complement), which the original question asks for, is <code>not in</code>:</p>


string found was: 
<p>This is semantically the same as <code>not 'foo' in '**foo**'</code> but it's much more readable and explicitly provided for in the language as a readability improvement.</p>


string found was: 
<h2>Avoid using the below</h2>


string found was: 
<p>As promised, here's the <code>contains</code> method:</p>


string found was: 
<p>returns <code>True</code>. You could also call this function from the instance of the superstring:</p>


string found was: 
<p>But don't. Methods that start with underscores are considered semantically private. The only reason to use this is when extending the <code>in</code> and <code>not in</code> functionality (e.g. if subclassing <code>str</code>): </p>


string found was: 
<p>Also, avoid the following string methods:</p>


string found was: 
<p>Other languages may have no methods to directly test for substrings, and so you would have to use these types of methods, but with Python, it is more efficient to use the <code>in</code> comparison operator:</p>


string found was: 
<p>is much faster than the below:</p>


string found was: 
                <span class="comment-copy">Why should one avoid <code>str.index</code> and <code>str.find</code>? How else would you suggest someone find the index of a substring instead of just whether it exists or not? (or did you mean avoid using them in place of contains - so don&#39;t use <code>s.find(ss) != -1</code> instead of <code>ss in s</code>?)</span>


string found was: 
                <span class="comment-copy">Precisely so, although the intent behind the use of those methods may be better addressed by elegant use of the <code>re</code> module. I have not yet found a use for str.index or str.find myself in any code I have written yet.</span>


string found was: 
                <span class="comment-copy">@Ufos i guess the more obvious python way to do this is to use <code>any()</code> or <code>all()</code>. Like : <code>any([st in &#39;bob and john&#39; for st in names]) &gt;&gt;&gt; True</code></span>


string found was: 
                <span class="comment-copy">You don&#39;t need the inner square brackets in the any - <a href="https://www.python.org/dev/peps/pep-0289/" rel="nofollow noreferrer">python.org/dev/peps/pep-0289</a></span>


string found was: 
<p>Another way to find whether string contains few characters or not with the Boolean return value (i.e. <code>True</code> or `False)</p>


string found was: 
Not the answer you&#39;re looking for?							Browse other questions tagged <a href="/questions/tagged/python" class="post-tag" title="show questions tagged &#39;python&#39;" rel="tag">python</a> <a href="/questions/tagged/string" class="post-tag" title="show questions tagged &#39;string&#39;" rel="tag">string</a> <a href="/questions/tagged/substring" class="post-tag" title="show questions tagged &#39;substring&#39;" rel="tag">substring</a> <a href="/questions/tagged/contains" class="post-tag" title="show questions tagged &#39;contains&#39;" rel="tag">contains</a>  or <a href="/questions/ask">ask your own question</a>.						</h2>


string found was: 
        <p id="newsletter-ad-header">Get the <b>weekly newsletter!</b> In it, you&#39;ll get:</p>


string found was: 
    <div id="newsletter-signup-container"><input id="newsletter-signup" type="button" value="Sign up for the newsletter" /></div>


string found was: 
By subscribing, you agree to the <a href='http://stackexchange.com/legal/privacy-policy' target='_blank'>privacy policy</a> and <a href='http://stackexchange.com/legal/terms-of-service' target='_blank'>terms of service</a>.</p>


string found was: 
	<a href="/questions/28049454/how-to-check-if-the-header-contains-the-string-exampleexample-com?noredirect=1" class="question-hyperlink">How to check if the header contains the string &ldquo;example@example.com&rdquo;?</a>


string found was: 
                        <div class="spacer"><a href="/q/229551" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">1097</div></a><a href="/questions/229551/string-contains-in-bash" class="question-hyperlink">String contains in Bash</a></div><div class="spacer"><a href="/q/231767" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">5648</div></a><a href="/questions/231767/what-does-the-yield-keyword-do" class="question-hyperlink">What does the &ldquo;yield&rdquo; keyword do?</a></div><div class="spacer"><a href="/q/394809" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">2725</div></a><a href="/questions/394809/does-python-have-a-ternary-conditional-operator" class="question-hyperlink">Does Python have a ternary conditional operator?</a></div><div class="spacer"><a href="/q/444798" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">1811</div></a><a href="/questions/444798/case-insensitive-containsstring" class="question-hyperlink">Case insensitive &#39;Contains(string)&#39;</a></div><div class="spacer"><a href="/q/663171" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">1014</div></a><a href="/questions/663171/is-there-a-way-to-substring-a-string-in-python" class="question-hyperlink">Is there a way to substring a string in Python?</a></div><div class="spacer"><a href="/q/1789945" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">5365</div></a><a href="/questions/1789945/how-to-check-if-one-string-contains-another-substring-in-javascript" class="question-hyperlink">How to check if one string contains another substring in JavaScript?</a></div><div class="spacer"><a href="/q/2753956" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted large">980</div></a><a href="/questions/2753956/how-do-i-check-if-a-string-contains-another-string-in-objective-c" class="question-hyperlink">How do I check if a string contains another string in Objective-C?</a></div><div class="spacer"><a href="/q/3480771" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted large">579</div></a><a href="/questions/3480771/how-do-i-check-if-string-contains-substring" class="question-hyperlink">How do I check if string contains substring?</a></div><div class="spacer"><a href="/q/4666973" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted default">82</div></a><a href="/questions/4666973/how-to-extract-a-substring-from-inside-a-string-in-python" class="question-hyperlink">how to extract a substring from inside a string in Python?</a></div><div class="spacer"><a href="/q/20316533" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted default">1</div></a><a href="/questions/20316533/string-contains-second-instance-of-substring" class="question-hyperlink">String contains (second instance of substring)</a></div>


string found was: 
                    Draw the Sierpinski Arrowhead Curve


string found was: 
                    What&#39;s the fastest way to generate a 1 GB file containing only random numbers?


string found was: 
                    If the co-signer on my car loan dies, can the family take the car from me like they&#39;re threatening to?


string found was: 
                    Draw the Hilbert Curve


string found was: 
                    Can summer and winter wheels be of different size for the same car?


string found was: 
                        <li><a href="//softwareengineering.stackexchange.com" title="professionals, academics, and students working within the systems development life cycle who care about creating, delivering, and maintaining software responsibly">Software Engineering</a></li>


string found was: 
                        <li><a href="//android.stackexchange.com" title="enthusiasts and power users of the Android operating system">Android Enthusiasts</a></li>


string found was: 
                        <li><a href="//dba.stackexchange.com" title="database professionals who wish to improve their database skills and learn from others in the community">Database Administrators</a></li>


string found was: 
                        <li><a href="//magento.stackexchange.com" title="users of the Magento e-Commerce platform">Magento</a></li>


string found was: 
                        <li><a href="//dsp.stackexchange.com" title="practitioners of the art and science of signal, image and video processing">Signal Processing</a></li>


string found was: 
                        <li><a href="//japanese.stackexchange.com" title="students, teachers, and linguists wanting to discuss the finer points of the Japanese language">Japanese Language</a></li>


string found was: 
                        <li><a href="//philosophy.stackexchange.com" title="those interested in the study of the fundamental nature of knowledge, reality, and existence">Philosophy</a></li>


string found was: 
                        <li><a href="//meta.stackexchange.com" title="meta-discussion of the Stack Exchange family of Q&amp;A websites">Meta Stack Exchange</a></li>


string found was: 
                        <li><a href="//stackapps.com" title="apps, scripts, and development with the Stack Exchange API">Stack Apps</a></li>


string found was: 
                        <li><a href="//area51.stackexchange.com" title="proposing new sites in the Stack Exchange network">Area 51</a></li>

